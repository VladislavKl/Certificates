#1.	Просмотреть содержимое ветви реeстра HKCU
Reg Query "HKCU"
#2.	Создать, переименовать, удалить каталог на локальном диске
New-Item -Path 'C:\Tempor' -ItemType Directory
Rename-Item -Path 'C:\Tempor' 'C:\Temporary'
#in case there are some files in the folder
Remove-Item -Path 'C:\Temporary' -Recurse
#3.	Создать папку C:\M2T2_ФАМИЛИЯ. Создать диск ассоциированный с папкой 
C:\M2T2_ФАМИЛИЯ.
New-Item -Path 'C:\M2T2_klyuev' -ItemType Directory
New-PSDrive -Name Temp -PSProvider FileSystem -Root "C:\M2T2_klyuev"
#4.	Сохранить в текстовый файл на созданном диске список запущенных(!) служб. Просмотреть содержимое диска. Вывести содержимое файла в консоль PS.
Get-Service | Where-Object {$_.Status -eq "Running"} > Temp:\processes.txt                                                                                  Get-ChildItem Temp:\
Get-Content -Path "Temp:\processes.txt"         
#5.	Просуммировать все числовые значения переменных текущего сеанса.
Get-Variable -ValueOnly | Where{$_ -ne $null} | Where{[decimal],[single],[double],[int],[long] -eq $_.GetType()} | Measure-Object -Sum
#6.	Вывести список из 6 процессов занимающих дольше всего процессор.
Get-Process | Sort-Object CPU -desc | Select-Object -first 6
#7.	Вывести список названий и занятую виртуальную память (в Mb) каждого процесса, разделённые знаком тире, при этом если процесс занимает более 100Mb – выводить информацию красным цветом, иначе зелёным.
foreach($Process in Get-Process){
>> if ($Process.VM/1Mb -le 100) {write-host -ForegroundColor Green $Process.Name " - " ($Process.VM/1Mb) "Mb"}
>> else {write-host -ForegroundColor Red $Process.Name " - " ($Process.VM/1Mb) "Mb"}
>> }
#8.	Подсчитать размер занимаемый файлами в папке C:\windows (и во всех подпапках) за исключением файлов *.tmp
[double]((Get-ChildItem -force C:\Windows -Recurse -ErrorAction SilentlyContinue -Exclude *.tmp | Measure-Object Length -Sum).Sum / 1Gb)
#9.	Сохранить в CSV-файле информацию о записях одной ветви реестра HKLM:\SOFTWARE\Microsoft.
Get-ChildItem -Path Registry::HKLM\SOFTWARE\Microsoft\ | Export-CSV info.csv
#10.	Сохранить в XML -файле историческую информацию о командах выполнявшихся в текущем сеансе работы PS.
Get-History | Format-List -Property * | Export-Clixml task.xml
#11.	Загрузить данные из полученного в п.10 xml-файла и вывести в виде списка информацию о каждой записи, в виде 5 любых (выбранных Вами) свойств.
( [xml] (Get-Content -Path "C:\task.xml")).Objs.Obj | Select RefId, TN, ToString, Props
#12.	Удалить созданный диск и папку С:\M2T2_ФАМИЛИЯ
Remove-PSDrive -Name Temp        
Remove-Item -path c:\M2T2_klyuev -recurse